plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.google.protobuf" version "0.9.4" //used to generate java classes from .proto files
}

group = 'com.gini'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
    implementation 'com.google.protobuf:protobuf-java:4.27.2' //to generate java files from .proto files
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'javax.annotation:javax.annotation-api:1.3' //bug -> protoc does not support jakarta yet ->> https://github.com/grpc/grpc-java/issues/9179
    implementation 'io.grpc:grpc-netty-shaded:1.65.1'
}

// how to create this: https://www.youtube.com/watch?v=nB7J6D_IXrA&t=339s
// how to create this: https://github.com/google/protobuf-gradle-plugin
sourceSets {
    main {
        proto { //--------->>>>> from where to take the .proto files
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/resources/proto'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodevel'
        }
        java {  //---------->>>>> where to generate the java files from .proto files
            srcDir 'build/generated/source/proto/main/grpc'
            srcDir 'build/generated/source/proto/main/java'
        }
    }
//    test {
//        proto {
//            // In addition to the default 'src/test/proto'
//            srcDir 'src/test/protocolbuffers'
//        }
//    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:4.27.2'
    }

    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you leave it empty, it uses the current directory.
        // If you don't specify it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.65.0'
            // or
            // path = 'tools/protoc-gen-grpc-java'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
